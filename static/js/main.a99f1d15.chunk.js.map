{"version":3,"sources":["firebase/firebase-utils.js","components/portfolio/portfolio.component.jsx","components/portfolio-list/portfolio-list.component.jsx","components/social-band/social-band.component.jsx","components/bio/bio.component.jsx","components/content/content.component.jsx","components/footer/footer.component.jsx","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","convertCertificateSnapshotToList","collections","docs","map","doc","id","data","filter","active","firestore","auth","Portfolio","content","className","href","siteURL","target","rel","alt","src","imageURL","displayInfo","PortfolioList","title","portfolioContentList","gradientClassName","gutter","xs","sm","md","lg","span","portfolioContent","key","SocialBand","text","textStyle","iconStyle","style","LinkedinOutlined","GithubOutlined","FilePdfOutlined","MailOutlined","Bio","bio","intro","margin","color","fontSize","Content","portfolioCertificationList","portfolioDemoProjectList","length","Footer","antIcon","Loading3QuartersOutlined","spin","App","renderHeader","Header","theme","mode","defaultSelectedKeys","state","menuItems","item","Item","loading","collection","onSnapshot","snapshot","a","setState","size","indicator","Layout","this","padding","textAlign","renderSpinner","renderPage","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.a99f1d15.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAEQtWWA_YtR-VG4y7qJeKGBU8Sh7bD5X0\",\r\n  authDomain: \"crown-db-a0e18.firebaseapp.com\",\r\n  databaseURL: \"https://crown-db-a0e18.firebaseio.com\",\r\n  projectId: \"crown-db-a0e18\",\r\n  storageBucket: \"crown-db-a0e18.appspot.com\",\r\n  messagingSenderId: \"131627979395\",\r\n  appId: \"1:131627979395:web:5c1af8e59433606f0b41b6\",\r\n  measurementId: \"G-07Y73K5FYY\",\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const convertCertificateSnapshotToList = (collections) => {\r\n  const transformedCertificate = collections.docs.map((doc) => {\r\n    const certificate = {\r\n      id: doc.id,\r\n      ...doc.data(),\r\n    };\r\n    return certificate;\r\n  });\r\n  return transformedCertificate.filter((data) => data.active);\r\n};\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport default firebase;\r\n","import React from \"react\";\r\nimport \"./portfolio.styles.css\";\r\nimport { Card } from \"antd\";\r\n\r\nexport const Portfolio = ({ content }) => {\r\n  return (\r\n    <div className=\"portfolio-container\">\r\n      <a href={content.siteURL} target=\"_blank\" rel=\"noopner noreferrer\">\r\n        <img alt=\"monster\" src={content.imageURL} />\r\n      </a>\r\n      <h3>{content.displayInfo}</h3>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Portfolio } from \"./../portfolio/portfolio.component\";\r\nimport \"./portfolio-list.styles.css\";\r\nimport { Row, Col, Card } from \"antd\";\r\n\r\nexport const PortfolioList = ({\r\n  title,\r\n  portfolioContentList,\r\n  gradientClassName,\r\n}) => {\r\n  return (\r\n    <div className={gradientClassName}>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col className=\"gutter-row\" span={24}>\r\n          <h2>{title}</h2>\r\n        </Col>\r\n      </Row>\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        {portfolioContentList.map((portfolioContent) => (\r\n          <Col className=\"gutter-row\" key={portfolioContent.id} span={6}>\r\n            <Portfolio key={portfolioContent.id} content={portfolioContent} />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Row, Col } from \"antd\";\r\nimport {\r\n  MailOutlined,\r\n  FilePdfOutlined,\r\n  GithubOutlined,\r\n  LinkedinOutlined,\r\n} from \"@ant-design/icons\";\r\nexport const SocialBand = ({ text, textStyle, iconStyle }) => {\r\n  return (\r\n    <Row>\r\n      <Col>\r\n        <span style={textStyle}>{text}</span>\r\n        <a\r\n          href=\"https://www.linkedin.com/in/akshay-gautam-74577a117/\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={iconStyle}\r\n        >\r\n          <LinkedinOutlined />\r\n        </a>\r\n        <a\r\n          href=\"https://github.com/akshaygautam\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={iconStyle}\r\n        >\r\n          <GithubOutlined />\r\n        </a>\r\n        <a\r\n          href=\"https://drive.google.com/file/d/1ZJuFFjg1Mmc7KcfhNG5c5j0LA5AHRrXp/view?usp=sharing\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n          style={iconStyle}\r\n        >\r\n          <FilePdfOutlined />\r\n        </a>\r\n        <a href=\"mailto:akshay.gautam2209@gmail.com\" style={iconStyle}>\r\n          <MailOutlined />\r\n        </a>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./bio.styles.css\";\r\nimport { Row, Col, Card } from \"antd\";\r\nimport { SocialBand } from \"../social-band/social-band.component\";\r\nexport const Bio = ({ bio }) => {\r\n  const { imageURL, content, intro } = bio;\r\n  return (\r\n    <Card className=\"bio\">\r\n      <Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n        <Col span={12}>\r\n          <img src={imageURL} alt=\"me.jpg\" />\r\n        </Col>\r\n        <Col span={12}>\r\n          <h1>{intro}</h1>\r\n          <h3>{content}</h3>\r\n          <SocialBand\r\n            text=\"Know more\"\r\n            textStyle={{\r\n              margin: \"10px\",\r\n              color: \"white\",\r\n              fontSize: \"x-large\",\r\n            }}\r\n            iconStyle={{ color: \"white\", margin: \"5px\", fontSize: \"30px\" }}\r\n          />\r\n        </Col>\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./content.styles.css\";\r\nimport { PortfolioList } from \"../portfolio-list/portfolio-list.component\";\r\nimport { Bio } from \"../bio/bio.component\";\r\nimport { Card } from \"antd\";\r\nexport const Content = ({\r\n  portfolioCertificationList,\r\n  portfolioDemoProjectList,\r\n}) => {\r\n  const renderCertifiacations = () => {\r\n    return portfolioCertificationList &&\r\n      portfolioCertificationList.length > 0 ? (\r\n      <PortfolioList\r\n        gradientClassName=\"certificate-gradient\"\r\n        title=\"Certifications\"\r\n        portfolioContentList={portfolioCertificationList}\r\n      />\r\n    ) : null;\r\n  };\r\n\r\n  const renderDemoProjectList = () => {\r\n    return portfolioDemoProjectList && portfolioDemoProjectList.length > 0 ? (\r\n      <PortfolioList\r\n        gradientClassName=\"demo-project-gradient\"\r\n        title=\"Demo projects\"\r\n        portfolioContentList={portfolioDemoProjectList}\r\n      />\r\n    ) : null;\r\n  };\r\n  return (\r\n    <Card>\r\n      <Bio\r\n        bio={{\r\n          imageURL:\r\n            \"https://firebasestorage.googleapis.com/v0/b/crown-db-a0e18.appspot.com/o/portfolio%2Fme%2FIMG_1255.jpg?alt=media&token=93369c81-25d4-4571-bb9c-81d4f209a711\",\r\n          content: \"hey there this is my portfolio\",\r\n          intro: \"I'm Akshay Gautam\",\r\n        }}\r\n      />\r\n      {renderCertifiacations()}\r\n      {renderDemoProjectList()}\r\n    </Card>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./footer.styles.css\";\r\nimport { SocialBand } from \"../social-band/social-band.component\";\r\nexport const Footer = () => {\r\n  return (\r\n    <div className=\"footer\">\r\n      Portfolio ©2020 Created by Akshay Gautam\r\n      <div>\r\n        <SocialBand\r\n          text=\"Connect On\"\r\n          textStyle={{\r\n            margin: \"10px\",\r\n            color: \"black\",\r\n            fontSize: \"x-large\",\r\n          }}\r\n          iconStyle={{ color: \"black\", fontSize: \"20px\", margin: \"5px\" }}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Layout, Spin, Menu } from \"antd\";\nimport {\n  firestore,\n  convertCertificateSnapshotToList,\n} from \"./firebase/firebase-utils\";\nimport { Content as MyContent } from \"./components/content/content.component\";\nimport { Footer as MyFooter } from \"./components/footer/footer.component\";\nimport { Loading3QuartersOutlined } from \"@ant-design/icons\";\n\nconst antIcon = <Loading3QuartersOutlined style={{ fontSize: 24 }} spin />;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      loading: true,\n      portfolioCertificationList: [],\n      portfolioDemoProjectList: [],\n      menuItems: [\n        { id: 0, title: \"About me\" },\n        { id: 1, title: \"Certification\" },\n        { id: 2, title: \"Demo Projects\" },\n        { id: 3, title: \"Blogs\" },\n        { id: 4, title: \"Useful Resources\" },\n        { id: 5, title: \"Contact\" },\n      ],\n    };\n  }\n\n  componentDidMount() {\n    const portfolioCertificates = firestore.collection(\n      \"portfolio_certificates\"\n    );\n    portfolioCertificates.onSnapshot(async (snapshot) => {\n      const portfolioCertificationList = convertCertificateSnapshotToList(\n        snapshot\n      );\n      this.setState({ loading: false, portfolioCertificationList });\n    });\n\n    const portfolioDemoProjects = firestore.collection(\n      \"portfolio_demo_projects\"\n    );\n    portfolioDemoProjects.onSnapshot(async (snapshot) => {\n      const portfolioDemoProjectList = convertCertificateSnapshotToList(\n        snapshot\n      );\n      this.setState({ loading: false, portfolioDemoProjectList });\n    });\n  }\n\n  renderSpinner() {\n    return (\n      <div className=\"spinner\">\n        <Spin size=\"large\" indicator={antIcon} />\n      </div>\n    );\n  }\n\n  renderHeader = (Header) => {\n    return (\n      <Header>\n        <div className=\"logo\" />\n        <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={[\"0\"]}>\n          {this.state.menuItems.map((item) => {\n            return <Menu.Item key={item.id}>{item.title}</Menu.Item>;\n          })}\n        </Menu>\n      </Header>\n    );\n  };\n\n  renderPage() {\n    const { Content, Footer, Header } = Layout;\n    return (\n      <Layout>\n        {this.renderHeader(Header)}\n        <Content style={{ padding: \"0 50px\" }}>\n          <MyContent\n            portfolioCertificationList={this.state.portfolioCertificationList}\n            portfolioDemoProjectList={this.state.portfolioDemoProjectList}\n          />\n        </Content>\n        <Footer style={{ textAlign: \"center\" }}>\n          <MyFooter />\n        </Footer>\n      </Layout>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.state.loading ? this.renderSpinner() : this.renderPage()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"antd/dist/antd.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}